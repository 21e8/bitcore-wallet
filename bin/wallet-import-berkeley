#!/usr/bin/env node

var program = require('commander');
var fs = require('fs');
var exporter = require('bitcoin-wallet-node');
var EventEmitter = require('events').EventEmitter;

program
  .option('-t, --testnet', 'testnet/regtest network')
  .option('-f, --file <wallet.dat file>', 'import from wallet.dat file')
  .usage('[options] <new wallet file name> e.g. wallet-import-berkeley -f ~/.bitcoin/wallet.dat wallet.json')
  .parse(process.argv);

var args = program.args;

if (!args[0]) {
  program.help();
} else if (fs.existsSync(args[0])) {
  console.error('Output file: "' + args[0] + '" already exists, not over-writing, aborting.');
  process.exit(-1);
}

function exportWallet(callback) {
  var results = '';
  var emitter = new EventEmitter();
  exporter.stream({
    filePath: program.file,
    emitter: emitter
  });

  emitter.on('data', function(value) {
    results += value + ',\n';
  });

  emitter.on('close', function() {
    callback(results);
  });

  exporter.start();
}


exportWallet(function(result) {
  var outputFile;
  fs.open(args[0], 'wx', function(err, fd) {
    if (err) {
      if (err.code === "EEXIST") {
        console.error(args[0] + ' exists, not over-writing.');
        return;
      } else {
        throw err;
      }
    }

    result += JSON.stringify({network: (program.testnet ? 'testnet' : 'livenet')});
    fs.write(fd, result, function(err) {
      if(err) {
        throw err;
      }
      console.log('import complete');
    });

  });
});
